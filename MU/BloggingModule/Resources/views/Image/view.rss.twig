{# purpose of this template: images rss feed #}
<?xml version="1.0" encoding="{% set charset = pageGetVar('meta.charset') %}{% if charset == 'ISO-8859-15' %}ISO-8859-1{% else %}{{ charset }}{% endif %}" ?>
<rss version="2.0"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
    xmlns:admin="http://webns.net/mvcb/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:content="http://purl.org/rss/1.0/modules/content/"
    xmlns:atom="http://www.w3.org/2005/Atom">
{#<rss version="0.92">#}
    <channel>
        <title>{{ __('Latest images') }}</title>
        <link>{{ app.request.getSchemeAndHttpHost() ~ app.request.getBasePath()|e }}</link>
        <atom:link href="{{ app.request.getSchemeAndHttpHost() ~ app.request.getPathInfo() }}" rel="self" type="application/rss+xml" />
        <description>{{ __('A direct feed showing the list of images') }} - {{ getModVar('ZConfig', 'slogan') }}</description>
        <language>{{ app.request.locale }}</language>
        {# commented out as imagepath is not defined and we can't know whether this logo exists or not
        <image>
            <title>{{ getModVar('ZConfig', 'sitename') }}</title>
            <url>{{ app.request.getSchemeAndHttpHost() ~ app.request.getBasePath()|e }}{{ imagepath }}/logo.jpg</url>
            <link>{{ app.request.getSchemeAndHttpHost() ~ app.request.getBasePath()|e }}</link>
        </image>
        #}
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <copyright>Copyright (c) {{ 'now'|date('Y') }}, {{ app.request.getSchemeAndHttpHost()|e }}</copyright>
        <webMaster>{{ pageGetVar('adminmail)|e }}</webMaster>
{% for image in items %}
    {{ block('entry') }}
{% endfor %}
    </channel>
</rss>
{% block entry %}
    <item>
        {{ block('entry_content') }}
    </item>
{% endblock %}
{% block entry_content %}
    <title><![CDATA[{% if image.updatedDate|default %}{{ image.updatedDate|localizeddate('medium', 'short') }} - {% endif %}{{ image.getTitleFromDisplayPattern()|notifyFilters('mubloggingmodule.filterhook.images') }}]]></title>
    <link>{{ url('mubloggingmodule_image_' ~ routeArea ~ 'display', { 'id': image.id }) }}</link>
    <guid>{{ url('mubloggingmodule_image_' ~ routeArea ~ 'display', { 'id': image.id }) }}</guid>
    {% if image.createdBy|default and image.createdBy.getUid() > 0 %}
        {% set creatorAttributes = image.createdBy.getAttributes() %}
        <author>{{ image.createdBy.getEmail() }} ({{ creatorAttributes.get('realname')|default(creatorAttributes.get('name'))|default(image.createdBy.getUname()) }})</author>
    {% endif %}
    <description>
        <![CDATA[
        {{ image.title|replace({ '<br>': '<br />' }) }}
        ]]>
    </description>
    {% if image.createdDate|default %}
        <pubDate>{{ image.createdDate|date('a, d b Y T +0100') }}</pubDate>
    {% endif %}
{% endblock %}
