{# purpose of this template: images display view #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : (routeArea == 'admin' ? 'adminBase' : 'base') %}
{% extends 'MUBloggingModule::' ~ baseTemplate ~ '.html.twig' %}
{% block pageTitle %}{{ image.getTitleFromDisplayPattern()|default(__('Image')) }}{% endblock %}
{% block title %}
    {% set templateTitle = image.getTitleFromDisplayPattern()|default(__('Image')) %}
    {{ templateTitle|notifyFilters('mubloggingmodule.filter_hooks.images.filter') }}
    {% set itemActions = knp_menu_get('MUBloggingModule:ItemActionsMenu:menu', [], { entity: image, area: routeArea, context: 'display' }) %}
    <div class="dropdown">
        <a id="itemActions{{ image.id }}DropDownToggle" role="button" data-toggle="dropdown" data-target="#" href="javascript:void(0);" class="hidden dropdown-toggle"><i class="fa fa-tasks"></i> {{ __('Actions') }} <span class="caret"></span></a>
        {{ knp_menu_render(itemActions, { template: 'ZikulaMenuModule:Override:actions.html.twig' }) }}
    </div>
{% endblock %}
{% block admin_page_icon 'eye' %}
{% block content %}
    {% set isQuickView = app.request.query.getBoolean('raw', false) %}
    <div class="mubloggingmodule-image mubloggingmodule-display">

    <dl>
        {% if image.title is not empty %}
            <dt>{{ __('Title') }}</dt>
            <dd>{{ image.title }}</dd>
        {% endif %}
        {% if image.imageForArticle is not empty %}
            <dt>{{ __('Image for article') }}</dt>
            <dd>{% if image.imageForArticleMeta|default %}
            <a href="{{ image.imageForArticleUrl }}" title="{{ image.getTitleFromDisplayPattern()|e('html_attr') }}"{% if image.imageForArticleMeta.isImage %} class="image-link"{% endif %}>
            {% if image.imageForArticleMeta.isImage %}
                {% set thumbOptions = attribute(thumbRuntimeOptions, 'imageImageForArticle') %}
                <img src="{{ image.imageForArticle.getPathname()|imagine_filter('zkroot', thumbOptions) }}" alt="{{ image.getTitleFromDisplayPattern()|e('html_attr') }}" width="{{ thumbOptions.thumbnail.size[0] }}" height="{{ thumbOptions.thumbnail.size[1] }}" class="img-thumbnail" />
            {% else %}
                {{ __('Download') }} ({{ image.imageForArticleMeta.size|mubloggingmodule_fileSize(image.imageForArticle.getPathname(), false, false) }})
            {% endif %}
            </a>
            {% endif %}
            </dd>
        {% endif %}
        {% if image.description is not empty %}
            <dt>{{ __('Description') }}</dt>
            <dd>{{ image.description }}</dd>
        {% endif %}
        {% if image.post|default %}
            <dt>{{ __('Post') }}</dt>
            <dd>
              {% if not isQuickView %}
                  <a href="{{ path('mubloggingmodule_post_' ~ routeArea ~ 'display', { 'id': image.post.id, 'slug': image.post.slug }) }}">{% spaceless %}
                    {{ image.post.getTitleFromDisplayPattern() }}
                  {% endspaceless %}</a>
                  <a id="postItem{{ image.post.id }}Display" href="{{ path('mubloggingmodule_post_' ~ routeArea ~ 'display', { 'id': image.post.id, 'slug': image.post.slug, 'raw': 1 }) }}" title="{{ __('Open quick view window')|e('html_attr') }}" class="mublogging-inline-window hidden" data-modal-title="{{ image.post.getTitleFromDisplayPattern()|e('html_attr') }}"><span class="fa fa-id-card-o"></span></a>
              {% else %}
                  {{ image.post.getTitleFromDisplayPattern() }}
              {% endif %}
            </dd>
        {% endif %}
        
    </dl>

    {{ include('@MUBloggingModule/Helper/includeStandardFieldsDisplay.html.twig', { obj: image }) }}

    {{ block('display_hooks') }}
</div>
{% endblock %}
{% block display_hooks %}
    {% set hooks = notifyDisplayHooks(eventName='mubloggingmodule.ui_hooks.images.display_view', id=image.id, urlObject=currentUrlObject) %}
    {% for providerArea, hook in hooks if providerArea != 'provider.scribite.ui_hooks.editor' %}
        <h4>{{ providerArea }}</h4>
        {{ hook }}
    {% endfor %}
{% endblock %}
