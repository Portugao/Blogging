<?php
/**
 * Blogging.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <info@homepages-mit-zikula.de>.
 * @link http://homepages-mit-zikula.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio (http://modulestudio.de).
 */

namespace MU\BloggingModule\Container\Base;

use Zikula\Bundle\HookBundle\AbstractHookContainer as ZikulaHookContainer;
use Zikula\Bundle\HookBundle\Bundle\SubscriberBundle;
use Zikula\Bundle\HookBundle\Category\FilterHooksCategory;
use Zikula\Bundle\HookBundle\Category\UiHooksCategory;

/**
 * Base class for hook container methods.
 */
abstract class AbstractHookContainer extends ZikulaHookContainer
{
    /**
     * Define the hook bundles supported by this module.
     *
     * @return void
     */
    protected function setupHookBundles()
    {
        $bundle = new SubscriberBundle('MUBloggingModule', 'subscriber.mubloggingmodule.ui_hooks.posts', UiHooksCategory::NAME, $this->__('mubloggingmodule. Posts Display Hooks'));
        
        // Display hook for view/display templates.
        $bundle->addEvent(UiHooksCategory::TYPE_DISPLAY_VIEW, 'mubloggingmodule.ui_hooks.posts.display_view');
        // Display hook for create/edit forms.
        $bundle->addEvent(UiHooksCategory::TYPE_FORM_EDIT, 'mubloggingmodule.ui_hooks.posts.form_edit');
        // Display hook for delete dialogues.
        $bundle->addEvent(UiHooksCategory::TYPE_FORM_DELETE, 'mubloggingmodule.ui_hooks.posts.form_delete');
        // Validate input from an ui create/edit form.
        $bundle->addEvent(UiHooksCategory::TYPE_VALIDATE_EDIT, 'mubloggingmodule.ui_hooks.posts.validate_edit');
        // Validate input from an ui delete form.
        $bundle->addEvent(UiHooksCategory::TYPE_VALIDATE_DELETE, 'mubloggingmodule.ui_hooks.posts.validate_delete');
        // Perform the final update actions for a ui create/edit form.
        $bundle->addEvent(UiHooksCategory::TYPE_PROCESS_EDIT, 'mubloggingmodule.ui_hooks.posts.process_edit');
        // Perform the final delete actions for a ui form.
        $bundle->addEvent(UiHooksCategory::TYPE_PROCESS_DELETE, 'mubloggingmodule.ui_hooks.posts.process_delete');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUBloggingModule', 'subscriber.mubloggingmodule.filter_hooks.posts', FilterHooksCategory::NAME, $this->__('mubloggingmodule. Posts Filter Hooks'));
        // A filter applied to the given area.
        $bundle->addEvent(FilterHooksCategory::TYPE_FILTER, 'mubloggingmodule.filter_hooks.posts.filter');
        $this->registerHookSubscriberBundle($bundle);
        
        
    }
}
